# Server settings
server:
  port: 8080

# Database settings
spring:
  datasource:
    url: "jdbc:postgresql://postgres:5432/${DB_NAME:voyagia}"
    username: "${DB_USERNAME}"
    password: "${DB_PASSWORD}"
    driver-class-name: org.postgresql.Driver

    # Docker HikariCP settings
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

  # JPA settings
  jpa:
    hibernate:
      ddl-auto: "update"
    show-sql: false
    properties:
      hibernate:
        format_sql: false

  # Redis settings
  data:
    redis:
      host: "redis"
      port: 6379
      password: "${REDIS_PASSWORD:}"
      database: 0
      timeout: 60000ms
      connect-timeout: 10000ms
      jedis:
        pool:
          max-active: 20
          max-wait: -1ms
          max-idle: 10
          min-idle: 2

# Logging settings
logging:
  level:
    root: INFO
    com.voyagia: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN

  file:
    name:

# Actuator settings
management:
  endpoints:
    web:
      exposure:
        include: "health,info,metrics,env"
  endpoint:
    health:
      show-details: always
  health:
    redis:
      enabled: true
    db:
      enabled: true

# ðŸ“¦ Custom Properties
voyagia:
  database:
    host: "postgres"
    port: 5432
    name: "${DB_NAME:voyagia}"
    username: "${DB_USERNAME}"
    password: "${DB_PASSWORD}"
    max-pool-size: 20
    min-pool-size: 5
    connection-timeout: 30000

  redis:
    host: "redis"
    port: 6379
    password: "${REDIS_PASSWORD:}"
    database: 0
    timeout: 60000
    max-active: 20
    max-wait: -1

# Docker environment information
info:
  environment: "docker"
  infrastructure:
    database: "PostgreSQL Container"
    cache: "Redis Container"
    network: "Docker Bridge Network"
